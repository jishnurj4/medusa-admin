/**
 * @oas [post] /store/orders/customer/confirm
 * operationId: "PostOrdersCustomerOrderClaimsCustomerOrderClaimAccept"
 * summary: "Verify Order Claim"
 * description: "Verify the claim order token provided to the customer when they request ownership of an order."
 * externalDocs:
 *   description: "How to implement claim-order flow in a storefront"
 *   url: "https://docs.medusajs.com/modules/orders/storefront/implement-claim-order"
 * requestBody:
 *   content:
 *     application/json:
 *       schema:
 *         $ref: "#/components/schemas/StorePostCustomersCustomerAcceptClaimReq"
 * x-codegen:
 *   method: confirmRequest
 * x-codeSamples:
 *   - lang: JavaScript
 *     label: JS Client
 *     source: |
 *       import Medusa from "@medusajs/medusa-js"
 *       const medusa = new Medusa({ baseUrl: MEDUSA_BACKEND_URL, maxRetries: 3 })
 *       // must be previously logged in or use api token
 *       medusa.orders.confirmRequest(
 *         token,
 *       )
 *       .then(() => {
 *         // successful
 *       })
 *       .catch(() => {
 *         // an error occurred
 *       })
 *   - lang: tsx
 *     label: Medusa React
 *     source: |
 *       import React from "react"
 *       import { useGrantOrderAccess } from "medusa-react"
 *
 *       const ClaimOrder = () => {
 *         const confirmOrderRequest = useGrantOrderAccess()
 *
 *         const handleOrderRequestConfirmation = (
 *           token: string
 *         ) => {
 *           confirmOrderRequest.mutate({
 *             token
 *           }, {
 *             onSuccess: () => {
 *               // successful
 *             },
 *             onError: () => {
 *               // an error occurred.
 *             }
 *           })
 *         }
 *
 *         // ...
 *       }
 *
 *       export default ClaimOrder
 *   - lang: Shell
 *     label: cURL
 *     source: |
 *       curl -X POST '{backend_url}/store/orders/customer/confirm' \
 *       -H 'Content-Type: application/json' \
 *       --data-raw '{
 *           "token": "{token}",
 *       }'
 * security:
 *   - api_token: []
 *   - cookie_auth: []
 *   - jwt_token: []
 * tags:
 *   - Orders
 * responses:
 *   200:
 *     description: OK
 *   "400":
 *     $ref: "#/components/responses/400_error"
 *   "401":
 *     $ref: "#/components/responses/unauthorized"
 *   "404":
 *     $ref: "#/components/responses/not_found_error"
 *   "409":
 *     $ref: "#/components/responses/invalid_state_error"
 *   "422":
 *     $ref: "#/components/responses/invalid_request_error"
 *   "500":
 *     $ref: "#/components/responses/500_error"
 */
declare const _default: (req: any, res: any) => Promise<void>;
export default _default;
/**
 * @schema StorePostCustomersCustomerAcceptClaimReq
 * type: object
 * description: "The details necessary to grant order access."
 * required:
 *   - token
 * properties:
 *   token:
 *     description: "The claim token generated by previous request to the Claim Order API Route."
 *     type: string
 */
export declare class StorePostCustomersCustomerAcceptClaimReq {
    token: string;
}
