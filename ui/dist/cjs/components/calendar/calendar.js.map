{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../../src/components/calendar/calendar.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,2CAAqE;AACrE,qDAA8B;AAC9B,uDAMyB;AAEzB,qCAAiC;AACjC,gDAAmD;AAyBnD;;;;GAIG;AACH,MAAM,QAAQ,GAAG,CAAC;AAChB;;GAEG;AACH,SAAS;AACT;;GAEG;AACH,UAAU;AACV;;GAEG;AACH,IAAI,GAAG,QAAQ;AACf;;;;GAIG;AACH,eAAe,GAAG,IAAI;AACtB;;;;GAIG;AACH,MAAM,EACN,GAAG,KAAK,EACM,EAAE,EAAE;IAClB,OAAO,CACL,oBAAC,4BAAS,IACR,IAAI,EAAE,IAAI,EACV,eAAe,EAAE,eAAe,EAChC,SAAS,EAAE,IAAA,SAAG,EAAC,SAAS,CAAC,EACzB,UAAU,EAAE;YACV,MAAM,EAAE,2BAA2B;YACnC,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE,+CAA+C;YACxD,aAAa,EACX,gHAAgH;YAClH,GAAG,EAAE,kGAAkG;YACvG,UAAU,EAAE,IAAA,SAAG,EACb,IAAA,gCAAkB,EAAC,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAC9D;YACD,mBAAmB,EAAE,oBAAoB;YACzC,eAAe,EAAE,qBAAqB;YACtC,KAAK,EAAE,kCAAkC;YACzC,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EAAE,IAAA,SAAG,EACZ,qGAAqG,CACtG;YACD,GAAG,EAAE,0BAA0B;YAC/B,IAAI,EAAE,kFAAkF;YACxF,GAAG,EAAE,mMAAmM;YACxM,YAAY,EACV,wGAAwG;YAC1G,WAAW,EAAE,uDAAuD;YACpE,YAAY,EAAE,qBAAqB;YACnC,gBAAgB,EACd,yEAAyE;YAC3E,UAAU,EAAE,WAAW;YACvB,GAAG,UAAU;SACd,EACD,MAAM,EAAE,MAAM,EACd,UAAU,EAAE;YACV,QAAQ,EAAE,GAAG,EAAE,CAAC,oBAAC,wBAAgB,OAAG;YACpC,SAAS,EAAE,GAAG,EAAE,CAAC,oBAAC,yBAAiB,OAAG;YACtC,GAAG,EAAE,GAAG;SACT,KACI,KAAkC,GACvC,CACH,CAAA;AACH,CAAC,CAAA;AA4DQ,4BAAQ;AA3DjB,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAA;AAEjC,MAAM,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,YAAY,EAAY,EAAE,EAAE;IAC/C,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAoB,IAAI,CAAC,CAAA;IACjD,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAClE,IAAA,+BAAY,EAAC,IAAI,EAAE,YAAY,EAAE,GAAG,CAAC,CAAA;IAEvC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,eAAe,CAAA;IAEnE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;;QACnB,IAAI,QAAQ,EAAE;YACZ,MAAA,GAAG,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAA;SACrB;IACH,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAEd,IAAI,QAAQ,EAAE;QACZ,OAAO,yCAAK,CAAA;KACb;IAED,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,CACL,gCACM,QAAQ,EACZ,SAAS,EAAE,IAAA,SAAG,EAAC,kCAAkC,EAAE,QAAQ,CAAC,SAAS,CAAC,GACtE,CACH,CAAA;KACF;IAED,MAAM,EACJ,QAAQ,EAAE,cAAc,EACxB,SAAS,EAAE,eAAe,EAC1B,GAAG,eAAe,EACnB,GAAG,WAAW,CAAA;IAEf,OAAO,CACL,gCACE,GAAG,EAAE,GAAG,KACJ,eAAe,EACnB,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,IAAA,SAAG,EAAC,UAAU,EAAE,eAAe,CAAC;QAE1C,cAAc;QACd,KAAK,IAAI,CACR,8BACE,SAAS,EAAE,IAAA,SAAG,EACZ,qDAAqD,EACrD;gBACE,sBAAsB,EAAE,CAAC,QAAQ;gBACjC,mBAAmB,EAAE,QAAQ;gBAC7B,uBAAuB,EAAE,QAAQ,IAAI,YAAY;gBACjD,mBAAmB,EAAE,QAAQ;aAC9B,CACF,GACD,CACH,CACM,CACV,CAAA;AACH,CAAC,CAAA","sourcesContent":["\"use client\"\n\nimport { TriangleLeftMini, TriangleRightMini } from \"@medusajs/icons\"\nimport * as React from \"react\"\nimport {\n  DayPicker,\n  useDayRender,\n  type DayPickerRangeProps,\n  type DayPickerSingleProps,\n  type DayProps,\n} from \"react-day-picker\"\n\nimport { clx } from \"@/utils/clx\"\nimport { iconButtonVariants } from \"../icon-button\"\n\ntype OmitKeys<T, K extends keyof T> = {\n  [P in keyof T as P extends K ? never : P]: T[P]\n}\n\ntype KeysToOmit = \"showWeekNumber\" | \"captionLayout\" | \"mode\"\n\ntype SingleProps = OmitKeys<DayPickerSingleProps, KeysToOmit>\ntype RangeProps = OmitKeys<DayPickerRangeProps, KeysToOmit>\n\n/**\n * @interface\n */\ntype CalendarProps =\n  | ({\n      mode: \"single\"\n    } & SingleProps)\n  | ({\n      mode?: undefined\n    } & SingleProps)\n  | ({\n      mode: \"range\"\n    } & RangeProps)\n\n/**\n * This component is based on the [react-date-picker](https://www.npmjs.com/package/react-date-picker) package.\n *\n * @excludeExternal\n */\nconst Calendar = ({\n  /**\n   * @ignore\n   */\n  className,\n  /**\n   * @ignore\n   */\n  classNames,\n  /**\n   * The calendar's mode.\n   */\n  mode = \"single\",\n  /**\n   * Whether to show days of previous and next months.\n   *\n   * @keep\n   */\n  showOutsideDays = true,\n  /**\n   * The locale to use for formatting dates. To change the locale pass a date-fns locale object.\n   *\n   * @keep\n   */\n  locale,\n  ...props\n}: CalendarProps) => {\n  return (\n    <DayPicker\n      mode={mode}\n      showOutsideDays={showOutsideDays}\n      className={clx(className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row\",\n        month: \"space-y-2 p-3\",\n        caption: \"flex justify-center relative items-center h-8\",\n        caption_label:\n          \"txt-compact-small-plus absolute bottom-0 left-0 right-0 top-0 flex items-center justify-center text-ui-fg-base\",\n        nav: \"space-x-1 flex items-center bg-ui-bg-base-pressed rounded-md w-full h-full justify-between p-0.5\",\n        nav_button: clx(\n          iconButtonVariants({ variant: \"transparent\", size: \"small\" })\n        ),\n        nav_button_previous: \"!absolute left-0.5\",\n        nav_button_next: \"!absolute right-0.5\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex w-full gap-x-2\",\n        head_cell: clx(\n          \"txt-compact-small-plus text-ui-fg-muted m-0 box-border flex h-8 w-8 items-center justify-center p-0\"\n        ),\n        row: \"flex w-full mt-2 gap-x-2\",\n        cell: \"txt-compact-small-plus relative rounded-md p-0 text-center focus-within:relative\",\n        day: \"txt-compact-small-plus text-ui-fg-base bg-ui-bg-base hover:bg-ui-bg-base-hover focus-visible:shadow-borders-interactive-with-focus h-8 w-8 rounded-md p-0 text-center outline-none transition-all\",\n        day_selected:\n          \"bg-ui-bg-interactive text-ui-fg-on-color hover:bg-ui-bg-interactive focus-visible:bg-ui-bg-interactive\",\n        day_outside: \"text-ui-fg-disabled aria-selected:text-ui-fg-on-color\",\n        day_disabled: \"text-ui-fg-disabled\",\n        day_range_middle:\n          \"aria-selected:!bg-ui-bg-highlight aria-selected:!text-ui-fg-interactive\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      locale={locale}\n      components={{\n        IconLeft: () => <TriangleLeftMini />,\n        IconRight: () => <TriangleRightMini />,\n        Day: Day,\n      }}\n      {...(props as SingleProps & RangeProps)}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nconst Day = ({ date, displayMonth }: DayProps) => {\n  const ref = React.useRef<HTMLButtonElement>(null)\n  const { activeModifiers, buttonProps, divProps, isButton, isHidden } =\n    useDayRender(date, displayMonth, ref)\n\n  const { selected, today, disabled, range_middle } = activeModifiers\n\n  React.useEffect(() => {\n    if (selected) {\n      ref.current?.focus()\n    }\n  }, [selected])\n\n  if (isHidden) {\n    return <></>\n  }\n\n  if (!isButton) {\n    return (\n      <div\n        {...divProps}\n        className={clx(\"flex items-center justify-center\", divProps.className)}\n      />\n    )\n  }\n\n  const {\n    children: buttonChildren,\n    className: buttonClassName,\n    ...buttonPropsRest\n  } = buttonProps\n\n  return (\n    <button\n      ref={ref}\n      {...buttonPropsRest}\n      type=\"button\"\n      className={clx(\"relative\", buttonClassName)}\n    >\n      {buttonChildren}\n      {today && (\n        <span\n          className={clx(\n            \"absolute right-[5px] top-[5px] h-1 w-1 rounded-full\",\n            {\n              \"bg-ui-fg-interactive\": !selected,\n              \"bg-ui-fg-on-color\": selected,\n              \"!bg-ui-fg-interactive\": selected && range_middle,\n              \"bg-ui-fg-disabled\": disabled,\n            }\n          )}\n        />\n      )}\n    </button>\n  )\n}\n\nexport { Calendar }\n"]}