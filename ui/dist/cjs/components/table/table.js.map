{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../../src/components/table/table.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Minus } from \"@medusajs/icons\"\nimport * as React from \"react\"\n\nimport { Button } from \"@/components/button\"\nimport { clx } from \"@/utils/clx\"\n\n/**\n * This component is based on the table element and its various children:\n *\n * - `Table`: `table`\n * - `Table.Header`: `thead`\n * - `Table.Row`: `tr`\n * - `Table.HeaderCell`: `th`\n * - `Table.Body`: `tbody`\n * - `Table.Cell`: `td`\n *\n * Each component supports the props or attributes of its equivalent HTML element.\n */\nconst Root = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <table\n    ref={ref}\n    className={clx(\"text-ui-fg-subtle txt-compact-small w-full\", className)}\n    {...props}\n  />\n))\nRoot.displayName = \"Table\"\n\nconst Row = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={clx(\n      \"bg-ui-bg-base hover:bg-ui-bg-base-hover border-ui-border-base transition-fg border-b\",\n      \"[&_td:last-child]:pr-6 [&_th:last-child]:pr-6\",\n      \"[&_td:first-child]:pl-6 [&_th:first-child]:pl-6\",\n      className\n    )}\n    {...props}\n  />\n))\nRow.displayName = \"Table.Row\"\n\nconst Cell = React.forwardRef<\n  HTMLTableCellElement,\n  React.HTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td ref={ref} className={clx(\"h-12 pr-6\", className)} {...props} />\n))\nCell.displayName = \"Table.Cell\"\n\nconst Header = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead\n    ref={ref}\n    className={clx(\n      \"border-ui-border-base txt-compact-small-plus [&_tr:hover]:bg-ui-bg-base border-y\",\n      className\n    )}\n    {...props}\n  />\n))\nHeader.displayName = \"Table.Header\"\n\nconst HeaderCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={clx(\"txt-compact-small-plus h-12 pr-6 text-left\", className)}\n    {...props}\n  />\n))\nHeaderCell.displayName = \"Table.HeaderCell\"\n\nconst Body = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={clx(\"border-ui-border-base border-b\", className)}\n    {...props}\n  />\n))\nBody.displayName = \"Table.Body\"\n\ninterface TablePaginationProps extends React.HTMLAttributes<HTMLDivElement> {\n  count: number\n  pageSize: number\n  pageIndex: number\n  pageCount: number\n  canPreviousPage: boolean\n  canNextPage: boolean\n  translations?: {\n    of?: string\n    results?: string\n    pages?: string\n    prev?: string\n    next?: string\n  }\n  previousPage: () => void\n  nextPage: () => void\n}\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Pagination = React.forwardRef<HTMLDivElement, TablePaginationProps>(\n  (\n    {\n      className,\n      /**\n       * The total number of items.\n       */\n      count,\n      /**\n       * The number of items per page.\n       */\n      pageSize,\n      /**\n       * The total number of pages.\n       */\n      pageCount,\n      /**\n       * The current page index.\n       */\n      pageIndex,\n      /**\n       * Whether there's a previous page that can be navigated to.\n       */\n      canPreviousPage,\n      /**\n       * Whether there's a next page that can be navigated to.\n       */\n      canNextPage,\n      /**\n       * A function that handles navigating to the next page.\n       * This function should handle retrieving data for the next page.\n       */\n      nextPage,\n      /**\n       * A function that handles navigating to the previous page.\n       * This function should handle retrieving data for the previous page.\n       */\n      previousPage,\n      /**\n       * An optional object of words to use in the pagination component.\n       * Use this to override the default words, or translate them into another language.\n       */\n      translations = {\n        of: \"of\",\n        results: \"results\",\n        pages: \"pages\",\n        prev: \"Prev\",\n        next: \"Next\",\n      },\n      ...props\n    }: TablePaginationProps,\n    ref\n  ) => {\n    const { from, to } = React.useMemo(() => {\n      const from = count === 0 ? count : pageIndex * pageSize + 1\n      const to = Math.min(count, (pageIndex + 1) * pageSize)\n\n      return { from, to }\n    }, [count, pageIndex, pageSize])\n\n    return (\n      <div\n        ref={ref}\n        className={clx(\n          \"text-ui-fg-subtle txt-compact-small-plus flex w-full items-center justify-between px-3 py-4\",\n          className\n        )}\n        {...props}\n      >\n        <div className=\"inline-flex items-center gap-x-1 px-3 py-[5px]\">\n          <p>{from}</p>\n          <Minus className=\"text-ui-fg-muted\" />\n          <p>{`${to} ${translations.of} ${count} ${translations.results}`}</p>\n        </div>\n        <div className=\"flex items-center gap-x-2\">\n          <div className=\"inline-flex items-center gap-x-1 px-3 py-[5px]\">\n            <p>\n              {pageIndex + 1} {translations.of} {Math.max(pageCount, 1)}{\" \"}\n              {translations.pages}\n            </p>\n          </div>\n          <Button\n            type=\"button\"\n            variant={\"transparent\"}\n            onClick={previousPage}\n            disabled={!canPreviousPage}\n          >\n            {translations.prev}\n          </Button>\n          <Button\n            type=\"button\"\n            variant={\"transparent\"}\n            onClick={nextPage}\n            disabled={!canNextPage}\n          >\n            {translations.next}\n          </Button>\n        </div>\n      </div>\n    )\n  }\n)\nPagination.displayName = \"Table.Pagination\"\n\nconst Table = Object.assign(Root, {\n  Row,\n  Cell,\n  Header,\n  HeaderCell,\n  Body,\n  Pagination,\n})\n\nexport { Table }\n"]}