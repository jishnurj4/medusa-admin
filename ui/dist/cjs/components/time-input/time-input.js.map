{"version":3,"file":"time-input.js","sourceRoot":"","sources":["../../../../src/components/time-input/time-input.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,uDAK+B;AAC/B,0DAIkC;AAClC,qDAA8B;AAE9B,8CAAoD;AACpD,qCAAiC;AAOjC,MAAM,WAAW,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,EAAoB,EAAE,EAAE;IAC3D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAA;IAE9C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAA,2BAAc,EAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;IAE5D,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,GAAG,CAAA;IAClE,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,GAAG,CAAA;IAElE,MAAM,WAAW,GAAG,OAAO,IAAI,OAAO,CAAA;IAEtC,OAAO,CACL,gCACM,YAAY,EAChB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACZ,gFAAgF,EAChF,uBAAe,EACf,2GAA2G,EAC3G;YACE,qEAAqE,EACnE,WAAW;YACb,MAAM,EAAE,OAAO;YACf,yEAAyE,EACvE,KAAK,CAAC,UAAU;YAClB,mCAAmC,EAAE,CAAC,OAAO,CAAC,UAAU;SACzD,CACF;QAED,6CACc,MAAM,EAClB,SAAS,EAAE,IAAA,SAAG,EACZ,+EAA+E,EAC/E;gBACE,MAAM,EAAE,CAAC,OAAO,CAAC,aAAa;gBAC9B,KAAK,EAAE,CAAC,OAAO,CAAC,aAAa;aAC9B,CACF,IAEA,OAAO,CAAC,WAAW,CACf;QACN,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CACtC,CACP,CAAA;AACH,CAAC,CAAA;AAOD;;GAEG;AACH,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAChC,CACE;AACE;;;GAGG;AACH,SAAS,EACT,GAAG,KAAK,EACO,EACjB,GAAG,EACH,EAAE;IACF,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAA;IAEnD,KAAK,CAAC,mBAAmB,CACvB,GAAG,EACH,GAAG,EAAE,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CACxB,CAAA;IAED,MAAM,MAAM,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAA;IAEzE,MAAM,KAAK,GAAG,IAAA,8BAAiB,EAAC;QAC9B,SAAS,EAAE,SAAS;QACpB,MAAM,EAAE,MAAM;QACd,uBAAuB,EAAE,IAAI;QAC7B,SAAS,EAAE,IAAI;QACf,GAAG,KAAK;KACT,CAAC,CAAA;IAEF,MAAM,EAAE,UAAU,EAAE,GAAG,IAAA,yBAAY,EACjC;QACE,GAAG,KAAK;QACR,SAAS,EAAE,SAAS;QACpB,uBAAuB,EAAE,IAAI;KAC9B,EACD,KAAK,EACL,QAAQ,CACT,CAAA;IAED,OAAO,CACL,gCACM,UAAU,EACd,GAAG,EAAE,QAAQ,EACb,SAAS,EAAC,6CAA6C,IAEtD,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAClC,oBAAC,WAAW,IAAC,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,GAAI,CACxD,CAAC,CACE,CACP,CAAA;AACH,CAAC,CACF,CAAA;AAGQ,8BAAS;AAFlB,SAAS,CAAC,WAAW,GAAG,WAAW,CAAA","sourcesContent":["\"use client\"\n\nimport {\n  AriaTimeFieldProps,\n  TimeValue,\n  useDateSegment,\n  useTimeField,\n} from \"@react-aria/datepicker\"\nimport {\n  useTimeFieldState,\n  type DateFieldState,\n  type DateSegment,\n} from \"@react-stately/datepicker\"\nimport * as React from \"react\"\n\nimport { inputBaseStyles } from \"@/components/input\"\nimport { clx } from \"@/utils/clx\"\n\ntype TimeSegmentProps = {\n  segment: DateSegment\n  state: DateFieldState\n}\n\nconst TimeSegment = ({ segment, state }: TimeSegmentProps) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  const { segmentProps } = useDateSegment(segment, state, ref)\n\n  const isColon = segment.type === \"literal\" && segment.text === \":\"\n  const isSpace = segment.type === \"literal\" && segment.text === \"â€¯\"\n\n  const isDecorator = isColon || isSpace\n\n  return (\n    <div\n      {...segmentProps}\n      ref={ref}\n      className={clx(\n        \"txt-compact-small w-full rounded-md px-2 py-1 text-left uppercase tabular-nums\",\n        inputBaseStyles,\n        \"group-aria-[invalid=true]/time-input:!shadow-borders-error group-invalid/time-input:!shadow-borders-error\",\n        {\n          \"text-ui-fg-muted !w-fit border-none bg-transparent px-0 shadow-none\":\n            isDecorator,\n          hidden: isSpace,\n          \"text-ui-fg-disabled bg-ui-bg-disabled border-ui-border-base shadow-none\":\n            state.isDisabled,\n          \"!text-ui-fg-muted !bg-transparent\": !segment.isEditable,\n        }\n      )}\n    >\n      <span\n        aria-hidden=\"true\"\n        className={clx(\n          \"txt-compact-small text-ui-fg-muted pointer-events-none block w-full text-left\",\n          {\n            hidden: !segment.isPlaceholder,\n            \"h-0\": !segment.isPlaceholder,\n          }\n        )}\n      >\n        {segment.placeholder}\n      </span>\n      {segment.isPlaceholder ? \"\" : segment.text}\n    </div>\n  )\n}\n\ntype TimeInputProps = Omit<\n  AriaTimeFieldProps<TimeValue>,\n  \"label\" | \"shouldForceLeadingZeros\" | \"description\" | \"errorMessage\"\n>\n\n/**\n * This component is based on the `div` element and supports all of its props.\n */\nconst TimeInput = React.forwardRef<HTMLDivElement, TimeInputProps>(\n  (\n    {\n      /**\n       * The time's format. If no value is specified, the format is\n       * set based on the user's locale.\n       */\n      hourCycle,\n      ...props\n    }: TimeInputProps,\n    ref\n  ) => {\n    const innerRef = React.useRef<HTMLDivElement>(null)\n\n    React.useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n      ref,\n      () => innerRef?.current\n    )\n\n    const locale = window !== undefined ? window.navigator.language : \"en-US\"\n\n    const state = useTimeFieldState({\n      hourCycle: hourCycle,\n      locale: locale,\n      shouldForceLeadingZeros: true,\n      autoFocus: true,\n      ...props,\n    })\n\n    const { fieldProps } = useTimeField(\n      {\n        ...props,\n        hourCycle: hourCycle,\n        shouldForceLeadingZeros: true,\n      },\n      state,\n      innerRef\n    )\n\n    return (\n      <div\n        {...fieldProps}\n        ref={innerRef}\n        className=\"group/time-input inline-flex w-full gap-x-2\"\n      >\n        {state.segments.map((segment, i) => (\n          <TimeSegment key={i} segment={segment} state={state} />\n        ))}\n      </div>\n    )\n  }\n)\nTimeInput.displayName = \"TimeInput\"\n\nexport { TimeInput }\n"]}