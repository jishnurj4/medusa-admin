{"version":3,"file":"command-bar.js","sourceRoot":"","sources":["../../../../src/components/command-bar/command-bar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as Popover from \"@radix-ui/react-popover\"\nimport * as Portal from \"@radix-ui/react-portal\"\nimport * as React from \"react\"\n\nimport { Kbd } from \"@/components/kbd\"\nimport { clx } from \"@/utils/clx\"\n\ninterface CommandBarProps extends React.PropsWithChildren {\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  defaultOpen?: boolean\n  disableAutoFocus?: boolean\n}\n\n/**\n * The root component of the command bar. This component manages the state of the command bar.\n */\nconst Root = ({\n  /**\n   * Whether to open (show) the command bar.\n   */\n  open = false,\n  /**\n   * Specify a function to handle the change of `open`'s value.\n   */\n  onOpenChange,\n  /**\n   * Whether the command bar is open by default.\n   */\n  defaultOpen = false,\n  /**\n   * Whether to disable focusing automatically on the command bar when it's opened.\n   */\n  disableAutoFocus = true,\n  children,\n}: CommandBarProps) => {\n  return (\n    <Popover.Root\n      open={open}\n      onOpenChange={onOpenChange}\n      defaultOpen={defaultOpen}\n    >\n      <Portal.Root>\n        <Popover.Anchor\n          className={clx(\"fixed bottom-8 left-1/2 h-px w-px -translate-x-1/2\")}\n        />\n      </Portal.Root>\n      <Popover.Portal>\n        <Popover.Content\n          side=\"top\"\n          sideOffset={0}\n          onOpenAutoFocus={(e) => {\n            if (disableAutoFocus) {\n              e.preventDefault()\n            }\n          }}\n          className={clx(\n            \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\"\n          )}\n        >\n          {children}\n        </Popover.Content>\n      </Popover.Portal>\n    </Popover.Root>\n  )\n}\nRoot.displayName = \"CommandBar\"\n\n/**\n * The value component of the command bar. This component is used to display a value,\n * such as the number of selected items which the commands will act on.\n */\nconst Value = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\n        \"txt-compact-small-plus text-ui-contrast-fg-secondary px-3 py-2.5\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nValue.displayName = \"CommandBar.Value\"\n\n/**\n * The bar component of the command bar. This component is used to display the commands.\n */\nconst Bar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\n        \"bg-ui-contrast-bg-base relative flex items-center overflow-hidden rounded-full px-1\",\n        \"after:shadow-elevation-flyout after:pointer-events-none after:absolute after:inset-0 after:rounded-full after:content-['']\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nBar.displayName = \"CommandBar.Bar\"\n\n/**\n * The seperator component of the command bar. This component is used to display a seperator between commands.\n */\nconst Seperator = React.forwardRef<\n  HTMLDivElement,\n  Omit<React.ComponentPropsWithoutRef<\"div\">, \"children\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\"bg-ui-contrast-border-base h-10 w-px\", className)}\n      {...props}\n    />\n  )\n})\nSeperator.displayName = \"CommandBar.Seperator\"\n\ninterface CommandProps\n  extends Omit<\n    React.ComponentPropsWithoutRef<\"button\">,\n    \"children\" | \"onClick\"\n  > {\n  action: () => void | Promise<void>\n  label: string\n  shortcut: string\n}\n\n/**\n * The command component of the command bar. This component is used to display a command, as well as registering the keyboad shortcut.\n */\nconst Command = React.forwardRef<HTMLButtonElement, CommandProps>(\n  (\n    {\n      className,\n      /**\n       * @ignore\n       */\n      type = \"button\",\n      /**\n       * The command's label.\n       */\n      label,\n      /**\n       * The function to execute when the command is triggered.\n       */\n      action,\n      /**\n       * The command's shortcut\n       */\n      shortcut,\n      disabled,\n      ...props\n    }: CommandProps,\n    ref\n  ) => {\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === shortcut) {\n          event.preventDefault()\n          event.stopPropagation()\n          action()\n        }\n      }\n\n      if (!disabled) {\n        document.addEventListener(\"keydown\", handleKeyDown)\n      }\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown)\n      }\n    }, [action, shortcut, disabled])\n\n    return (\n      <button\n        ref={ref}\n        className={clx(\n          \"bg-ui-contrast-bg-base txt-compact-small-plus transition-fg text-ui-contrast-fg-primary flex items-center gap-x-2 px-3 py-2.5 outline-none\",\n          \"focus-visible:bg-ui-contrast-bg-highlight focus-visible:hover:bg-ui-contrast-bg-base-hover hover:bg-ui-contrast-bg-base-hover active:bg-ui-contrast-bg-base-pressed focus-visible:active:bg-ui-contrast-bg-base-pressed disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled\",\n          \"last-of-type:-mr-1 last-of-type:pr-4\",\n          className\n        )}\n        type={type}\n        onClick={action}\n        {...props}\n      >\n        <span>{label}</span>\n        <Kbd className=\"bg-ui-contrast-bg-subtle border-ui-contrast-border-base text-ui-contrast-fg-secondary\">\n          {shortcut.toUpperCase()}\n        </Kbd>\n      </button>\n    )\n  }\n)\nCommand.displayName = \"CommandBar.Command\"\n\nconst CommandBar = Object.assign(Root, {\n  Command,\n  Value,\n  Bar,\n  Seperator,\n})\n\nexport { CommandBar }\n"]}