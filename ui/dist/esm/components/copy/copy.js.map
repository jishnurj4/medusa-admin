{"version":3,"file":"copy.js","sourceRoot":"","sources":["../../../../src/components/copy/copy.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { Tooltip } from \"@/components/tooltip\"\nimport { clx } from \"@/utils/clx\"\nimport {\n  CheckCircleMiniSolid,\n  CheckCircleSolid,\n  SquareTwoStack,\n  SquareTwoStackMini,\n} from \"@medusajs/icons\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport copy from \"copy-to-clipboard\"\nimport React, { useState } from \"react\"\n\ntype CopyProps = React.HTMLAttributes<HTMLButtonElement> & {\n  content: string\n  variant?: \"mini\" | \"default\" | null\n  asChild?: boolean\n}\n\n/**\n * This component is based on the `button` element and supports all of its props\n */\nconst Copy = React.forwardRef<HTMLButtonElement, CopyProps>(\n  (\n    {\n      children,\n      className,\n      /**\n       * The content to copy.\n       */\n      content,\n      /**\n       * The variant of the copy button.\n       */\n      variant = \"default\",\n      /**\n       * Whether to remove the wrapper `button` element and use the\n       * passed child element instead.\n       */\n      asChild = false,\n      ...props\n    }: CopyProps,\n    ref\n  ) => {\n    const [done, setDone] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [text, setText] = useState(\"Copy\")\n\n    const copyToClipboard = (\n      e:\n        | React.MouseEvent<HTMLElement, MouseEvent>\n        | React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n      e.stopPropagation()\n\n      setDone(true)\n      copy(content)\n\n      setTimeout(() => {\n        setDone(false)\n      }, 2000)\n    }\n\n    React.useEffect(() => {\n      if (done) {\n        setText(\"Copied\")\n        return\n      }\n\n      setTimeout(() => {\n        setText(\"Copy\")\n      }, 500)\n    }, [done])\n\n    const isDefaultVariant = (\n      variant?: string | null\n    ): variant is \"default\" => {\n      return variant === \"default\"\n    }\n\n    const isDefault = isDefaultVariant(variant)\n\n    const Component = asChild ? Slot : \"button\"\n\n    return (\n      <Tooltip content={text} open={done || open} onOpenChange={setOpen}>\n        <Component\n          ref={ref}\n          aria-label=\"Copy code snippet\"\n          type=\"button\"\n          className={clx(\"text-ui-code-icon h-fit w-fit\", className)}\n          onClick={copyToClipboard}\n          {...props}\n        >\n          {children ? (\n            children\n          ) : done ? (\n            isDefault ? (\n              <CheckCircleSolid />\n            ) : (\n              <CheckCircleMiniSolid />\n            )\n          ) : isDefault ? (\n            <SquareTwoStack />\n          ) : (\n            <SquareTwoStackMini />\n          )}\n        </Component>\n      </Tooltip>\n    )\n  }\n)\nCopy.displayName = \"Copy\"\n\nexport { Copy }\n"]}