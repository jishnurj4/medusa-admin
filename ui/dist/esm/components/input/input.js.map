{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../../src/components/input/input.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { Eye, EyeSlash, MagnifyingGlassMini } from \"@medusajs/icons\"\nimport { VariantProps, cva } from \"cva\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst inputBaseStyles = clx(\n  \"caret-ui-fg-base bg-ui-bg-field hover:bg-ui-bg-field-hover shadow-borders-base placeholder-ui-fg-muted text-ui-fg-base transition-fg relative w-full appearance-none rounded-md outline-none\",\n  \"focus-visible:shadow-borders-interactive-with-active\",\n  \"disabled:text-ui-fg-disabled disabled:!bg-ui-bg-disabled disabled:placeholder-ui-fg-disabled disabled:cursor-not-allowed\",\n  \"aria-[invalid=true]:!shadow-borders-error  invalid:!shadow-borders-error\"\n)\n\nconst inputVariants = cva({\n  base: clx(\n    inputBaseStyles,\n    \"[&::--webkit-search-cancel-button]:hidden [&::-webkit-search-cancel-button]:hidden [&::-webkit-search-decoration]:hidden\"\n  ),\n  variants: {\n    size: {\n      base: \"txt-compact-small h-8 px-2 py-1.5\",\n      small: \"txt-compact-small h-7 px-2 py-1\",\n    },\n  },\n  defaultVariants: {\n    size: \"base\",\n  },\n})\n\ninterface InputProps\n  extends VariantProps<typeof inputVariants>,\n    Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {}\n\n/**\n * This component is based on the `input` element and supports all of its props\n */\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      /**\n       * The input's size.\n       */\n      size = \"base\",\n      ...props\n    }: InputProps,\n    ref\n  ) => {\n    const [typeState, setTypeState] = React.useState(type)\n\n    const isPassword = type === \"password\"\n    const isSearch = type === \"search\"\n\n    return (\n      <div className=\"relative\">\n        <input\n          ref={ref}\n          type={isPassword ? typeState : type}\n          className={clx(\n            inputVariants({ size: size }),\n            {\n              \"pl-8\": isSearch && size === \"base\",\n              \"pr-8\": isPassword && size === \"base\",\n              \"pl-7\": isSearch && size === \"small\",\n              \"pr-7\": isPassword && size === \"small\",\n            },\n            className\n          )}\n          {...props}\n        />\n        {isSearch && (\n          <div\n            className={clx(\n              \"text-ui-fg-muted pointer-events-none absolute bottom-0 left-0 flex items-center justify-center\",\n              {\n                \"h-8 w-8\": size === \"base\",\n                \"h-7 w-7\": size === \"small\",\n              }\n            )}\n            role=\"img\"\n          >\n            <MagnifyingGlassMini />\n          </div>\n        )}\n        {isPassword && (\n          <div\n            className={clx(\n              \"absolute bottom-0 right-0 flex items-center justify-center border-l\",\n              {\n                \"h-8 w-8\": size === \"base\",\n                \"h-7 w-7\": size === \"small\",\n              }\n            )}\n          >\n            <button\n              className=\"text-ui-fg-muted hover:text-ui-fg-base focus-visible:text-ui-fg-base focus-visible:shadow-borders-interactive-w-focus active:text-ui-fg-base h-fit w-fit rounded-sm outline-none transition-all\"\n              type=\"button\"\n              onClick={() => {\n                setTypeState(typeState === \"password\" ? \"text\" : \"password\")\n              }}\n            >\n              <span className=\"sr-only\">\n                {typeState === \"password\" ? \"Show password\" : \"Hide password\"}\n              </span>\n              {typeState === \"password\" ? <Eye /> : <EyeSlash />}\n            </button>\n          </div>\n        )}\n      </div>\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input, inputBaseStyles }\n"]}