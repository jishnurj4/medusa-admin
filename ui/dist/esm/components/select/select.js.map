{"version":3,"file":"select.js","sourceRoot":"","sources":["../../../../src/components/select/select.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { EllipseMiniSolid, TrianglesMini } from \"@medusajs/icons\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { cva } from \"cva\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\ninterface SelectProps\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root> {\n  size?: \"base\" | \"small\"\n}\n\ntype SelectContextValue = {\n  size: \"base\" | \"small\"\n}\n\nconst SelectContext = React.createContext<SelectContextValue | null>(null)\n\nconst useSelectContext = () => {\n  const context = React.useContext(SelectContext)\n\n  if (context === null) {\n    throw new Error(\"useSelectContext must be used within a SelectProvider\")\n  }\n\n  return context\n}\n\n/**\n * This component is based on [Radix UI Select](https://www.radix-ui.com/primitives/docs/components/select).\n * It also accepts all props of the HTML `select` component.\n */\nconst Root = ({\n  children,\n  /**\n   * The select's size.\n   */\n  size = \"base\",\n  ...props\n}: SelectProps) => {\n  return (\n    <SelectContext.Provider value={React.useMemo(() => ({ size }), [size])}>\n      <SelectPrimitive.Root {...props}>{children}</SelectPrimitive.Root>\n    </SelectContext.Provider>\n  )\n}\nRoot.displayName = \"Select\"\n\n/**\n * Groups multiple items together.\n */\nconst Group = SelectPrimitive.Group\nGroup.displayName = \"Select.Group\"\n\n/**\n * Displays the selected value, or a placeholder if no value is selected.\n * It's based on [Radix UI Select Value](https://www.radix-ui.com/primitives/docs/components/select#value).\n */\nconst Value = SelectPrimitive.Value\nValue.displayName = \"Select.Value\"\n\nconst triggerVariants = cva({\n  base: clx(\n    \"bg-ui-bg-field shadow-buttons-neutral transition-fg flex w-full select-none items-center justify-between rounded-md outline-none\",\n    \"data-[placeholder]:text-ui-fg-muted text-ui-fg-base\",\n    \"hover:bg-ui-bg-field-hover\",\n    \"focus-visible:shadow-borders-interactive-with-active data-[state=open]:!shadow-borders-interactive-with-active\",\n    \"aria-[invalid=true]:border-ui-border-error aria-[invalid=true]:shadow-borders-error\",\n    \"invalid:border-ui-border-error invalid:shadow-borders-error\",\n    \"disabled:!bg-ui-bg-disabled disabled:!text-ui-fg-disabled\",\n    \"group/trigger\"\n  ),\n  variants: {\n    size: {\n      base: \"h-8 px-2 py-1.5 txt-compact-small\",\n      small: \"h-7 px-2 py-1 txt-compact-small\",\n    },\n  },\n})\n\n/**\n * The trigger that toggles the select.\n */\nconst Trigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => {\n  const { size } = useSelectContext()\n\n  return (\n    <SelectPrimitive.Trigger\n      ref={ref}\n      className={clx(triggerVariants({ size }), className)}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <TrianglesMini className=\"text-ui-fg-muted group-disabled/trigger:text-ui-fg-disabled\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n})\nTrigger.displayName = \"Select.Trigger\"\n\nconst Content = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(\n  (\n    {\n      className,\n      children,\n      position = \"popper\",\n      sideOffset = 8,\n      collisionPadding = 24,\n      ...props\n    },\n    ref\n  ) => (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        ref={ref}\n        className={clx(\n          \"bg-ui-bg-base text-ui-fg-base shadow-elevation-flyout relative max-h-[200px] min-w-[var(--radix-select-trigger-width)] overflow-hidden rounded-lg\",\n          \"data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\",\n          \"data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95\",\n          \"data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          {\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\":\n              position === \"popper\",\n          },\n          className\n        )}\n        position={position}\n        sideOffset={sideOffset}\n        collisionPadding={collisionPadding}\n        {...props}\n      >\n        <SelectPrimitive.Viewport\n          className={clx(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n)\nContent.displayName = \"Select.Content\"\n\n/**\n * Used to label a group of items.\n */\nconst Label = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={clx(\n      \"txt-compact-xsmall-plus text-ui-fg-subtle px-3 py-2\",\n      className\n    )}\n    {...props}\n  />\n))\nLabel.displayName = \"Select.Label\"\n\n/**\n * An item in the select. It's based on [Radix UI Select Item](https://www.radix-ui.com/primitives/docs/components/select#item)\n * and accepts its props.\n */\nconst Item = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => {\n  const { size } = useSelectContext()\n\n  return (\n    <SelectPrimitive.Item\n      ref={ref}\n      className={clx(\n        \"bg-ui-bg-base grid cursor-pointer grid-cols-[20px_1fr] gap-x-2 rounded-md px-3 py-2 outline-none transition-colors\",\n        \"hover:bg-ui-bg-base-hover focus-visible:bg-ui-bg-base-hover\",\n        {\n          \"txt-compact-medium data-[state=checked]:txt-compact-medium-plus\":\n            size === \"base\",\n          \"txt-compact-small data-[state=checked]:txt-compact-medium-plus\":\n            size === \"small\",\n        },\n        className\n      )}\n      {...props}\n    >\n      <span className=\"flex h-5 w-5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <EllipseMiniSolid />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText className=\"flex-1 truncate\">\n        {children}\n      </SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n})\nItem.displayName = \"Select.Item\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={clx(\"bg-ui-border-base -mx-1 my-1 h-px\", className)}\n    {...props}\n  />\n))\nSeparator.displayName = \"Select.Separator\"\n\nconst Select = Object.assign(Root, {\n  Group,\n  Value,\n  Trigger,\n  Content,\n  Label,\n  Item,\n  Separator,\n})\n\nexport { Select }\n"]}